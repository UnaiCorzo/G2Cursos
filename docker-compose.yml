version: "3.7"
services:
  app:
    build:
      args:
        user: sammy
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: g2cursos
    container_name: g2cursos-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - g2cursos

  db:
    image: mysql:5.7
    container_name: g2cursos-db
    restart: unless-stopped
    volumes:
     - ./mysql/master/my.cnf:/etc/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - g2cursos

  db2:
    image: mysql:5.7
    container_name: g2cursos-db-slave-1
    restart: unless-stopped
    volumes:
     - ./mysql/slave/1/my.cnf:/etc/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - g2cursos

  db3:
    image: mysql:5.7
    container_name: g2cursos-db-slave-2
    restart: unless-stopped
    volumes:
     - ./mysql/slave/2/my.cnf:/etc/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - g2cursos

  nginx:
    image: nginx:alpine
    container_name: g2cursos-nginx
    restart: unless-stopped
    expose:
        - 443
    volumes:
      - ./:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - g2cursos

  nginx2:
    image: nginx:alpine
    container_name: g2cursos-nginx2
    restart: unless-stopped
    expose:
        - 443
    volumes:
      - ./:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - g2cursos
    
  haproxy:
    image: haproxy
    container_name: haproxy
    restart: unless-stopped
    volumes:
        - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        - ./haproxy/clave.pem:/etc/ssl/private/clave.pem
        - volumen:/var/run
    ports:
        - "80:80"
        - "443:443"
    links:
        - nginx2
        - nginx 
    expose:
        - 80
        - 443
    networks:
      - g2cursos

networks:
  g2cursos:
    driver: bridge

volumes:
  volumen:
